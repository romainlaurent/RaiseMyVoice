@using RaiseMyVoice.Library.Repositories.Interfaces
@model RaiseMyVoice.Library.Models.Question

@{
    ViewData["Title"] = "Create";
    var moduleId = ViewData["Id"];
    Layout = "_Layout2";
}
@inject ISubjectRepository _subjectRepository;

<h2>Create</h2>

<form asp-action="Create">
    <div class="form-horizontal">
        <h4>Question</h4>
        <hr/>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="SubjectId" class="control-label col-md-offset-1 col-md-4">Subject</label>
            @Html.DropDownListFor(
                s => s.SubjectId,
                new SelectList(
                    _subjectRepository.GetAll(),
                    "Id",
                    "Name"),
                "<...>",
                new {@class = "form-control col-md-4"})
        </div>
        <div class="form-group col-md-offset-1">
            <label asp-for="Name" class="col-md-2 control-label"></label>
            <div class="col-md-6">
                <input asp-for="Name" class="form-control"/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
        <input type="hidden" asp-for="Id" value="0"/>
        <input type="hidden" asp-for="ModuleId" value="@moduleId"/>
        <div class="form-group">
            <div class="col-md-offset-1 col-md-4">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}